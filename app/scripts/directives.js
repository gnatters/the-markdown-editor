// Generated by CoffeeScript 1.6.2
'use strict';angular.module('mdApp').directive('colWidth', function() {
  return {
    restrict: 'A',
    scope: false,
    link: function(scope, elm, attrs) {
      var colWidth, new_col;

      colWidth = attrs.colWidth.split(/\s*,\s*/).map(function(s) {
        return parseFloat(s);
      });
      new_col = {
        index: colWidth[0],
        ratio: colWidth[1],
        percentage: "" + (colWidth[1] * 100) + "%"
      };
      return scope.cols[colWidth[0]] = new_col;
    }
  };
}).directive('dragarea', function() {
  return {
    restrict: 'A',
    replace: true,
    template: '<div class="dragarea">:</div>',
    scope: false,
    link: function(scope, elm, attrs) {
      return elm.bind('mousedown', function(e) {
        scope.drag.target = attrs.dragarea;
        scope.drag.start = e.clientX;
        scope.drag.before = scope.cols[scope.drag.target].ratio;
        scope.drag.target = parseInt(scope.drag.target);
        scope.drag.after = scope.cols[parseInt(scope.drag.target) + 1].ratio;
        return e.preventDefault();
      });
    }
  };
}).directive('themeSelector', function($rootScope) {
  return {
    restrict: 'E',
    replace: true,
    template: '\
<div id="theme-selector">\
  <span>Theme â–¾</span>\
  <ul class="list" ng-show="styles.show">\
    <li ng-repeat="(style, location) in styles.available" ng-click="styles.active=style" ng-class="{active_style:styles.active==style}">{{style}}</li>\
    <li ng-click="styles.active=\'external\'" ng-class="{active_style:styles.active==\'external\'}">\
    	<label for="external-css">External:</label>\
    	<input id="styles_external" ng-model="styles.external" ng-click="clicked_input($event)" ng-keydown="keydown_input($event)" type="text" name="external-css" id="external-css" placeholder="http://">\
    </li>\
  </ul>\
</div>',
    link: function(scope, elm, attrs) {
      elm.children()[0].addEventListener('click', function(e) {
        $rootScope.kill_event(e);
        return scope.$apply(function() {
          return scope.styles.show = !scope.styles.show;
        });
      });
      scope.clicked_input = function(e) {
        $rootScope.kill_event(e);
        return scope.styles.active = 'external';
      };
      return styles_external.onkeydown = function(e) {
        if ((e.which || e.keyCode) === 13) {
          return scope.$apply(function() {
            scope.styles.active = 'external';
            return scope.styles.show = false;
          });
        }
      };
    }
  };
});
